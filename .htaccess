<IfModule mod_rewrite.c>
	RewriteEngine on
	RewriteBase /
	############################
	# NC = NoCase (case insensitive)
	# R = Redirect: If a fully-qualified URL is specified (that is, including http://servername/) then a redirect will be issued to that location. Otherwise, the current protocol, servername, and port number will be used to generate the URL sent with the redirect. Any valid HTTP response status code may be specified, using the syntax [R=305], with a 302 status code being used by default if none is specified. The status code specified need not necessarily be a redirect (3xx) status code. However, if a status code is outside the redirect range (300-399) then the substitution string is dropped entirely, and rewriting is stopped as if the L were used.
	# L = Last: The [L] flag causes mod_rewrite to stop processing the rule set. In most contexts, this means that if the rule matches, no further rules will be processed. This corresponds to the last command in Perl, or the break command in C. Use this flag to indicate that the current rule should be applied immediately without considering further rules.
	# QSA = Append the Query String: When the replacement URI contains a query string, the default behavior of RewriteRule is to discard the existing query string, and replace it with the newly generated one. Using the [QSA] flag causes the query strings to be combined.
	# NE = noescape: By default, special characters, such as & and ?, for example, will be converted to their hexcode equivalent. Using the [NE] flag prevents that from happening.
	# N = next: The [N] flag causes the ruleset to start over again from the top, using the result of the ruleset so far as a starting point. Use with extreme caution, as it may result in loop.
		# The [Next] flag could be used, for example, if you wished to replace a certain string or letter repeatedly in a request. The example shown here will replace A with B everywhere in a request, and will continue doing so until there are no more As to be replaced.
		# RewriteRule "(.*)A(.*)" "$1B$2" [N]
		# You can think of this as a while loop: While this pattern still matches (i.e., while the URI still contains an A), perform this substitution (i.e., replace the A with a B).
		# In 2.4.8 and later, this module returns an error after 32,000 iterations to protect against unintended looping. An alternative maximum number of iterations can be specified by adding to the N flag.
		# # Be willing to replace 1 character in each pass of the loop
		# RewriteRule "(.+)[><;]$" "$1" [N=64000]
		# # ... or, give up if after 10 loops
		# RewriteRule "(.+)[><;]$" "$1" [N=10]
	# C = chain: The [C] or [chain] flag indicates that the RewriteRule is chained to the next rule. That is, if the rule matches, then it is processed as usual and control moves on to the next rule. However, if it does not match, then the next rule, and any other rules that are chained together, are skipped.
	
	# remove trailing slashes
	RewriteCond %{SCRIPT_FILENAME} !-f
	RewriteCond %{SCRIPT_FILENAME} !-d
	RewriteCond %{REQUEST_URI} !\.(php|html?|jpg|gif|png|css|xml|js)$
	RewriteRule ^(.*)/$ /$1 [R=301]

	RewriteRule ^\/?$ ./ImageCache.htm [NC,QSA]
</IfModule>
